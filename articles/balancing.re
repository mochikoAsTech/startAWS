= ELBでロードバランシングやサーバの台数管理をしよう

この章ではロードバランサーの設定や、サーバが停止してしまったときに自動復旧するオートスケールの設定をします。

//pagebreak

== ELBはなんのためにある？

ウェブサーバやデータベースサーバなどのインフラ環境を構築するときは「ここが壊れたり止まったりしたらサービス全体が停止する」というSPOF@<fn>{spof}をつぶしておくことが大切です。

//footnote[spof][Single Point of Failureの略。「ここが壊れたらシステム全体が停止する」という単一障害点のこと。]

皆さんが本著で構築した環境は「EC2のウェブサーバ1台＋RDSのデータベースサーバ1台」という構成ですので、ウェブサーバもデータベースサーバもどちらもSPOFです。たとえばAMIでEBSボリュームのEBSスナップショットを取る間、EC2のインスタンスを停止したら途端にWordPressのサイトは見られなくなります。

このSPOFをなくすための手段の1つとしてELB@<fn>{elb}、いわゆる負荷分散のためのロードバランサーのサービスがあります。もしEC2のウェブサーバが2台あって、その手前のロードバランサーがアクセスを2台に振り分けていたら、1台が停止している間ももう1台が応答できるのでサイトは停止しません。

//footnote[elb][Elastic Load Balancingの略。]

「予算がないのでウェブサーバを2台用意するのは無理です」とか「小規模なサイトなのでそこまでの冗長性は求めていません」という場合でもELBは役に立ちます。ELBを使って1台のウェブサーバにアクセスを流していた場合、Auto Scaling（オートスケーリング）というサービスを使うことで、その1台が死んでしまったときに自動でインスタンスを立ててサービスを自動復旧させてくれます。

他にもELBを使うと無料でSSL証明書を取得してサイトを楽にHTTPS化できるなど色々なメリットがあります。ELBは無料利用枠にも含まれていますので、ここではELBからEC2のインスタンスへアクセスを流すロードバランシングの設定をしてみましょう。

== ロードバランサーを作ろう

それではマネジメントコンソールの左上にある「サービス」から、「コンピューティング」の下にある「EC2」（@<img>{startaws129}）をクリックしてください。

//image[startaws129][サービス＞コンピューティング＞EC2][scale=0.8]{
//}

「EC2」をクリックすると、EC2のダッシュボード（@<img>{startaws130}）が表示されます。左メニューの「ロードバランサー」をクリックしてください。

//image[startaws130][左メニューの「ロードバランサー」をクリック][scale=0.8]{
//}

「ロードバランサーの作成」をクリック（@<img>{startaws131}）します。

//image[startaws131][「ロードバランサーの作成」をクリック][scale=0.8]{
//}

=== ロードバランサーの種類の選択

ロードバランサーにもいくつか種類があるのですが、今回はいちばん左の「Application Load Balancer」を使います。「作成」をクリック（@<img>{startaws132}）してください。

//image[startaws132][「Application Load Balancer」の「作成」をクリック][scale=0.8]{
//}

ここからは6つのステップでロードバランサーを作成していきます。

=== ステップ 1: ロードバランサーの設定

名前に「start-aws-elb」と入力（@<img>{startaws133}）したらそのまま下の方へスクロールします。

//image[startaws133][名前に「start-aws-elb」と入力][scale=0.8]{
//}

アベイラビリティーゾーンはすべてにチェック（@<img>{startaws134}）を入れて、「次の手順: セキュリティ設定の構成」をクリックします。

//image[startaws134][AZはすべてにチェックを入れて「次の手順: セキュリティ設定の構成」をクリック][scale=0.8]{
//}

=== ステップ 2: セキュリティ設定の構成

いきなり黄色で「ロードバランサーのセキュリティを向上させましょう。ロードバランサーは、いずれのセキュアリスナーも使用していません。」と表示（@<img>{startaws135}）されましたが、これは「HTTPじゃなくてもっとセキュアなHTTPSにした方がいいよ」とアドバイスしてくれているだけですので、今はそのままスルーで構いません。「次の設定: セキュリティグループの設定」をクリックします。

//image[startaws135][「次の設定: セキュリティグループの設定」をクリック][scale=0.8]{
//}

=== ステップ 3: セキュリティグループの設定

「セキュリティグループの割り当て」で「新しいセキュリティグループを作成する」を選択（@<img>{startaws136}）します。「セキュリティグループ名」と「説明」は次のように入力してください。（@<table>{elbSecurityGroup}）

//table[elbSecurityGroup][セキュリティグループの設定]{
セキュリティグループ名	elb-security-group
説明	HTTP Allow from anywhere
//}

続いて「ここからのアクセスのみを通す」というルールを設定します。ルールはタイプが「HTTP」で、ソースを「カスタム」の「0.0.0.0/0」にします。

//image[startaws136][セキュリティグループを設定したら「次の手順: ルーティングの設定」をクリック][scale=0.8]{
//}

これはロードバランサーの手前にあるセキュリティグループ（ファイアウォール）で「HTTP（ポート番号80番）ならどこからのリクエストでも通す」という設定です。「次の手順: ルーティングの設定」をクリックします。

=== ステップ 4: ルーティングの設定

ターゲットグループというのはロードバランサーの分散先となるサーバのグループのことです。つまり「このグループに入っているインスタンスにアクセスを割り振ります」ということですね。

名前に「elb-target-group」と入力（@<img>{startaws137}）したら、それ以外の設定@<fn>{healthcheck}はすべてのそのままで構いません。「次の手順: ターゲットの登録」をクリックします。

//image[startaws137][名前に「elb-target-group」と入力したら「次の手順: ターゲットの登録」をクリック][scale=0.8]{
//}

//footnote[healthcheck][ちなみにこのページで設定している「ヘルスチェック」とは、名前のとおりロードバランサーがターゲットグループのインスタンスに対して行う「ねぇウェブサーバ生きてる？ねぇってば生きてる？」という死活チェックのことです。このチェックに対してウェブサーバが応答をしなくなると「あ、死んでるからこのウェブサーバにアクセス流すのやめよう」となって負荷分散対象から除外されるのです。]

=== ステップ 5: ターゲットの登録

下部の「インスタンス」にある「start-aws-instance」にチェック（@<img>{startaws138}）を入れたら「登録済みに追加」をクリックします。

//image[startaws138][「start-aws-instance」にチェックを入れたら「登録済みに追加」をクリック][scale=0.8]{
//}

上部の「登録済みターゲット」に「start-aws-instance」が表示（@<img>{startaws139}）されたら「次の手順: 確認」をクリックします。

//image[startaws139][「登録済みターゲット」に「start-aws-instance」が表示されたら「次の手順: 確認」をクリック][scale=0.8]{
//}

=== ステップ 6: 確認

設定内容を確認したら「作成」をクリック（@<img>{startaws140}）します。

//image[startaws140][設定内容を確認したら「作成」をクリック][scale=0.8]{
//}

「ロードバランサーを正常に作成しました」と表示（@<img>{startaws141}）されたら「閉じる」をクリックします。

//image[startaws141][設定内容を確認したら「作成」をクリック][scale=0.8]{
//}

これでロードバランサーの作成は完了です。（@<img>{startaws142}）

//image[startaws142][ロードバランサーの作成は完了][scale=0.8]{
//}

== Auto Scaling
=== スケーリングに使える
=== サーバが1台死んでも自動で1台立ち上がる
== Route53でAレコードを変更してAliasにしよう
=== ページを確認してみよう
== セキュリティグループの変更
=== ELB経由の80番ポートを許可しよう
=== EIPの80番ポートは閉じておこう
=== アクセスログのフォーマット変更

