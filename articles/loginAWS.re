= AWSにログインしてみよう

この章ではAWSの管理画面にログインして、最初に行うべき設定をします。

//pagebreak

== AWS無料利用枠を使おう

AWSを初めて使用する場合、AWSアカウントを作成してから1年間は利用料が無料となります。但し、無料利用枠の範囲は決まっており、何をどれだけ使っても無料という訳ではありません。何もかも全部無料だと思ってサーバをバカスカ立てると、あとでクレジットカードにしっかり請求が来ますので注意してください。

どのサービスをどれくらい無料で使えるのか？は「AWS無料利用枠の詳細（@<href>{https://aws.amazon.com/jp/free/}）」（@<img>{awsFree}）に「Amazon EC2はt2.microインスタンスが月に750時間無料」、「Amazon EBSは30GB無料」のように細かく書かれていますので、そちらを参照してください。@<fn>{whatIsEC2}

//image[awsFree][AWS無料利用枠の詳細][scale=0.8]{
//}

//footnote[whatIsEC2][EC2ってなに？EBSってなに？は後述します。]

なお本著で使用するAWSのサービスは、基本的にこの無料利用枠の範囲内に収まるようにしています。但し、Route53というネームサーバのサービスについては無料利用枠の対象外であるため、毎月50セント程度かかりますのでその点はご留意ください。

うっかり請求が来ても筆者が代わりに支払うことはできません@<fn>{canNot}ので、後ほど「利用金額が○円を超えたらメールで知らせる」という請求アラートの設定をしっかりしておきましょう。

//footnote[canNot][できませんできません、人間にはこんなこと絶対にできません。]

== AWSのアカウント作成

AWSを使うには、先ずAWSアカウントを作成する必要があります。

AWSアカウントの作成は「DNSをはじめよう」（@<img>{startDNS}）@<fn>{booth}の「第3章 AWSのネームサーバ（Route53）を使ってみよう」で済ませていますので、本著でもそのAWSアカウントを引き続き使用していきます。

//footnote[booth][@<href>{https://mochikoastech.booth.pm/}]

まだAWSアカウントを持っていない！作っていない！という人は、先に「DNSをはじめよう」で、

  * ドメインを買う
  * AWSのアカウントを作る
  * ネームサーバとしてAWSのRoute53を使う

という3つのステップを踏んでから、この先へ進むようにしてください。

//image[startDNS][DNSをはじめよう][scale=0.5]{
//}

===[column] 【コラム】「DNSをはじめよう」はどこで買える？

「AWSをはじめよう」の前作である「DNSをはじめよう」（通称DNS本）は書籍版、PDFダウンロード版ともにBOOTH@<fn>{howToBuy}で購入できます。

//footnote[howToBuy][@<href>{https://mochikoastech.booth.pm/}]

BOOTHはピクシブ株式会社@<fn>{pixiv}が運営している同人誌の通販、及びダウンロード販売ができるサイトで、書籍版を購入すると1～2営業日以内にBOOTH倉庫からネコポスで本が送られてきます。技術書典で頒布されている同人誌の多くはBOOTHでも購入できますので、気になる方は「技術書典」のタグで検索@<fn>{techBookFest}してみることをお勧めします。

//footnote[pixiv][イラストを投稿できるSNS、pixivでお馴染み。@<href>{https://www.pixiv.net/}]
//footnote[techBookFest][@<href>{https://booth.pm/ja/search/技術書典}]

「DNS本、Amazonで売ってくれないかな？」と思われる方も多いと思うのですが、そもそもAmazonでは同人誌が販売できないため、Amazonで売るためには先ずはISBNコード（商業誌の裏表紙にあるバーコードとその下の番号）を頑張って取らねばなりません。そこに労力を割くよりは、いい本を書く方で頑張ろうと思いますのでどうぞご理解ください。

ちなみに「DNSをはじめよう」は、ただのDNS好きである筆者が、DNSへのあふれんばかりの愛を早口で詰め込んだ本ですが、技術書典4当日に750冊、その後もダウンロード販売で売れ続けて累計1300冊以上（2018年8月現在）という驚きの頒布数となりました。手にとって、買って、読んでくださった皆さん、ありがとうございます。

===[/column]

== マネジメントコンソールにサインイン

それでは早速、マネジメントコンソールへのサインイン画面（@<href>{https://console.aws.amazon.com/}）を開いて（@<img>{consoleSignin}）、マネジメントコンソールにサインインしましょう。サインインという言葉に馴染みがないかも知れませんが、「ログイン」と同じ意味です。

//image[consoleSignin][マネジメントコンソールのサインイン画面][scale=0.8]{
//}

先ずはAWSアカウントのEメールアドレスを入力して「次へ」、続いてルートユーザーサインインの画面（@<img>{enterPassword}）でパスワードを入力して「サインイン」ボタンを押します。

//image[enterPassword][Eメールアドレスを入力後、パスワードを入力してサインイン][scale=0.8]{
//}

無事にログインできたら、マネジメントコンソール（@<img>{managementConsole}）が表示されます。皆さんもログインできましたか？

//image[managementConsole][マネジメントコンソール（AWSの管理画面）][scale=0.8]{
//}

このマネジメントコンソールが、AWSの管理画面となります。これからサーバを立てたりする作業は、すべてこの画面で行っていきます。

=== 【ドリル】AWSの管理画面はなんて名前？

==== 問題

AWSの管理画面はなんと呼ばれているでしょう？

 * A. コントロールパネル
 * B. マネジメントコンソール
 * C. クラウドコンソール


//raw[|latex|\begin{reviewimage}\begin{flushright}\includegraphics[width=0.5\maxwidth\]{./images/answerColumnShort.png}\end{flushright}\end{reviewimage}]

==== 解答

正解はBのマネジメントコンソールです。マネジメントコンソールへのサインイン画面（@<href>{https://console.aws.amazon.com/}）からサインインします。AWSを使うときは、このマネジメントコンソールで色々な操作をしますので、サインイン方法をおぼえておいてくだい。

== IAMでユーザの権限管理

=== ルートユーザーの普段使いはやめよう

さて、皆さんがいまサインインに使ったのは「ルートユーザー」と呼ばれるユーザです。ルートユーザーは全権を持っていてなんでもできるユーザなので、普段からこのユーザを使って色々な操作をするのはお勧めしません。

「ルートユーザってなんでもできるユーザなんでしょ？大は小を兼ねるっていうし、便利なんだからそれ使えばいいじゃない」と思われるかも知れませんが、最寄のスーパーまで晩御飯の買い物に行くだけなのに、1,000万円と利用上限額なしのクレジットカードが詰まったアタッシュケースを持っていく人は居ないですよね？子供の財布なら1,000円くらい、自分の財布なら20,000円くらい、のように使う人によって使える金額を制御しておくことで、財布を落としたり盗まれたりしたときのダメージを少なくしておくのは、誰しも無意識にやっているセキュリティ対策だと思います。

AWSのユーザにはクレジットカードを紐付けているのですから、お財布もルートユーザーも、等しく扱いには気をつけなければいけません。たとえば悪い人があなたのルートユーザのEメールアドレスとパスワードを盗んで、こっそりマネジメントコンソールにログインしたとします。ルートユーザーならなんでもできるので、景気良くいちばん高いサーバ@<fn>{d28xlarge}を100台立てたとしましょう。その場合、1日で180万、1ヶ月で5,400万の請求があなたのところへやってきます。（@<img>{awsUnauthorizedUse}）

//image[awsUnauthorizedUse][「AWS 不正利用」で検索すると不正利用による請求で青ざめた体験記がたくさん][scale=0.8]{
//}

//footnote[d28xlarge][EC2のd2.8xlargeというサーバは、東京リージョンだと1時間あたり6.752ドル。日本円にすると1日でおおよそ18,000円です。もちろん大量に立てられないように台数制限はありますが、ルートユーザーならその制限を緩和するリクエストを出すことだって可能です。]

このようにルートユーザーだとなんでもできてしまうため、必要以上に権限のあるルートユーザーを普段使いするのは大変危険です。繰り返しになりますが、1,000万円とクレジットカードが詰まったアタッシュケースを持って、うっきうきでスーパーマーケットに行くような愚行はやめましょう。

=== IAMユーザを作ろう

という訳でルートユーザではなく、必要な作業ができる権限だけを持った自分用の「IAMユーザー」というユーザを作って普段はそちらを使いましょう。

==== IAMユーザーは1人に1つ

本著では自分ひとりだけで作業をする想定なので、IAMユーザーも1人しか作りません。ですがもし業務などで複数名でマネジメントコンソールにログインするような場合は、IAMユーザーは必ず1人につき1つずつ作成してください。まったく同じ作業をするから開発チーム内のAさんとBさんは同じIAMユーザを共有すればいいのでは？と思われる場合でも、必ずAさんBさんそれぞれに別々のIAMユーザーを用意することをお勧めします。

なぜならばAWSでは「いつ・どのIAMユーザーが・なにをしたのか」をすべて記録していて、後から調べることができるのですが、仮にAさんとBさんが1つのIAMユーザーを共用していた場合、何か重大なトラブルが起きたとき@<fn>{troubleHappened}に「誰がやらかしたのか？」を人単位で追いかけることができなくなってしまうからです。

//footnote[troubleHappened][想像もしたくないですが、たとえば誰かがすべてのサーバをバックアップ含めてすべてきれいに削除してしまった、とか。]

==== IAMダッシュボード

それではマネジメントコンソールの左上にある「サービス」から、「セキュリティ、アイデンティティ、コンプライアンス」の下にある「IAM」（@<img>{iam}）をクリックしてください。

//image[iam][サービス＞セキュリティ、アイデンティティ、コンプライアンス＞IAM][scale=0.8]{
//}

「IAM」をクリックすると、IAMのダッシュボード（@<img>{iamDashboard}）が表示されます。IAMはIdentity and Access Managementの略で、AWSの利用を安全にコントロールするためのサービスです。

//image[iamDashboard][IAMダッシュボード][scale=0.8]{
//}

==== IAMのグループを作成

IAMダッシュボードの左メニューから「グループ」を選んでください。

IAMではグループを作成して、そのグループに対して権限を設定し、個々のIAMユーザはグループに所属させることでアクセス権限を管理できます。たとえば前述のような「開発チームのAさんとBさんにはまったく同じ権限を付与したい」という場合に、先にdevelopersというグループを作って、developersグループに権限を付与しておけば、AさんBさんのIAMユーザはdevelopersグループに所属させるだけで必要な権限を渡すことができます。今はまだIAMにグループが1つもないため、先ずはグループを作りましょう。

左上の「新しいグループの作成」をクリック（@<img>{addGroup}）します。

//image[addGroup][左メニューの「グループ」＞「新しいグループの作成」をクリック][scale=0.8]{
//}

ここから3つの手順で新しいグループを作成していきます。

先ずは手順1の「グループ名」です。本著ではIAMのグループは「start-aws-group」にします。グループ名の欄に「start-aws-group」と入力して、右下の「次のステップ」をクリック（@<img>{addGroupStep1}）してください。

//image[addGroupStep1][グループ名に「start-aws-group」と入力して「次のステップ」をクリック][scale=0.8]{
//}

続いて手順2の「ポリシーのアタッチ」でグループに対してポリシーを紐付けます。なんだかものすごくたくさん並んでいますが、それぞれ「どのサービスでどんな操作を許可する」というポリシーですので、そこから必要なポリシーを選択してグループにアタッチ（紐付け）していきます。

先ほどのルートユーザーと同様に何でもできる1番権限の強いポリシーが「AdministratorAccess」です。そして「AdministratorAccess」からIAMに関する権限だけを引いたのが「PowerUserAccess」という、2番目に権限が強いポリシーです。

本来は必要な権限だけを付与するべきですが、今回は細かな設定はせずに、この2番目に強力な「PowerUserAccess」というポリシーを「start-aws-group」にアタッチします。フィルターに「PowerUserAccess」と入力して、下に表示された「PowerUserAccess」にチェックを入れたら、右下の「次のステップ」をクリック（@<img>{addGroupStep2}）してください。

//image[addGroupStep2][「PowerUserAccess」にチェックを入れて「次のステップ」をクリック][scale=0.8]{
//}

最後に手順3の「確認」です。グループ名とポリシーを確認したら、右下の「グループの作成」をクリック（@<img>{addGroupStep3}）します。

 * グループ名：start-aws-group
 * ポリシー：arn:aws:iam::aws:policy/PowerUserAccess 

//image[addGroupStep3][グループ名とポリシーを確認して右下の「グループの作成」をクリック][scale=0.8]{
//}

IAMのグループ一覧に、今作ったばかりの「start-aws-group」というグループが表示（@<img>{addGroupFinish}）されたらグループの作成は完了です。

//image[addGroupFinish][「start-aws-group」というグループが作成できた][scale=0.8]{
//}

==== IAMのユーザを作成

IAMのグループが作成できたので、続いてIAMユーザーを作成しましょう。「個々のIAMユーザーの作成」から「ユーザーの管理」をクリック（@<img>{iamDashboardUser}）してください。

//image[iamDashboardUser][個々のIAMユーザーの作成＞ユーザーの管理をクリック][scale=0.8]{
//}

ユーザーの一覧画面が表示されます。まだIAMユーザーが存在しないため、誰も表示されません。左上の青い「ユーザーを追加」をクリック（@<img>{addUser}）してください。

//image[addUser][個々のIAMユーザーの作成＞ユーザーの管理をクリック][scale=0.8]{
//}

ここから4つのステップでIAMユーザーを追加していきます。

先ずはステップ1です。IAMのユーザー名を入力してください。本著ではIAMのユーザ名は「start-aws-user」にします。IAMのユーザー名はこの後もログイン時に使用しますので、違うユーザー名にした場合は、しっかりメモしておいてください。続いてこのIAMユーザーでAWSにアクセスの方法を選択します。たとえばAWSで「サーバを立てる」「サーバを削除する」などの操作をするには、

  * プログラムからAWSのAPIを叩いて操作する方法
  * ブラウザでマネジメントコンソールを開いて画面上で操作する方法

の2つがあります。本著ではマネジメントコンソールからしか操作しないため、「アクセスの種類」は「AWSマネジメントコンソールへのアクセス」にのみチェック（@<img>{iamStep1}）を入れてください。

//image[iamStep1][ユーザー名をstart-aws-userにして、AWSマネジメントコンソールへのアクセスにチェック][scale=0.8]{
//}

ユーザー名を入力して、アクセスの種類を選択したら「次のステップ: アクセス権限」をクリックします。

続いてステップ2です。作成したIAMユーザーを、先に作っておいた「start-dns-group」に追加します。

=== 多要素認証（MFA）






== リージョンの変更

最初に、マネジメントコンソールの右上に表示されているリージョンが「東京」であることを確認してください。

もし東京以外のリージョンだったら、クリックして「アジアパシフィック(東京)」を選択してください。選択後、右上が「東京」に変わったらリージョンの変更は完了です。

AWSはバージニア、カナダ、ロンドン、シンガポール、東京など世界の各地域にデータセンターを持っていて、サーバはそのデータセンターの中にあります。

このリージョンとはその中でどこを使うか？を指定するものです。物理的に遠ければ、それだけ通信にも時間がかかって応答時間も遅くなるので、基本はこの「東京」リージョンを選びましょう。
但しサービスによって、まだ東京リージョンが使えないものがありますので、その場合は「米国東部 (バージニア北部)」を選びましょう。

今回は詳しく説明しませんが、リージョンという地域ごとの区分の下に、さらにアベイラビリティゾーンという区分があります。アベイラビリティゾーンの場所は公開されていませんが、たとえば東京リージョンの下に、新宿アベイラビリティゾーンと渋谷アベイラビリティゾーンがある、というようなイメージです。

この後、EC2でサーバを立てる際、誤って東京以外のリージョンで立てないように注意して下さい。

== 請求アラート
== リージョン
== CroudTrail

= AWSでウェブサーバを立てよう
== SecurityGroup
== VPC
== EC2
=== SSHの鍵認証
=== 鍵の変換
=== ElasticIP
=== Bastion

= サーバのバックアップを取っておこう
== AMI

= ELBでバランシングやサーバの台数を管理しよう
== ELB
== Auto Scaling
=== スケーリングに使える
=== サーバが1台死んでも自動で1台立ち上がる

= DBサーバを立てよう
== RDS
== Amazon Aurora

= ネームサーバの設定をしよう
== Route53

= AWSをやめたくなったらすること
== 無料の1年が終わる前にすべきこと

=== 【ドリル】サンプル

==== 問題

問題問題

 * A. Route53
 * B. お名前.com

//raw[|latex|\begin{reviewimage}\begin{flushright}\includegraphics[width=0.5\maxwidth\]{./images/answerColumnShort.png}\end{flushright}\end{reviewimage}]

==== 解答

正解はBです。
